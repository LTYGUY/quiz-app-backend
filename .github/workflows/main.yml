name: Deploy to AWS Lambda

on:
  push:
    paths:
      - src/**
      - .github/workflows/main.yml
      - serverless.yml
      - package.json
      - requirements.txt

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    env:
      CACHE_PATH: ~/.cache

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Cache node_modules
        uses: actions/cache@v3
        env:
          CACHE_NAME: cache-node-modules
        with:
          path: ${{ env.CACHE_PATH }}/node_modules
          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Install Node dependencies
        run: npm i

      - name: Serverless Deploy
        run: npx serverless deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Serverless doctor
        if: ${{ failure() }}
        run: npx serverless doctor
